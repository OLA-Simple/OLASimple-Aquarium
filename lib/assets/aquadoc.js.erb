(function() {

  let w = angular.module(
          'aquadoc',
          [ 'ngMaterial', 'ngAnimate' ],
          [ '$rootScopeProvider', function($rootScopeProvider) {
         }]);

    w.controller('aquadocCtrl', [ '$scope', '$http', '$sce',
                         function (  $scope,   $http,   $sce ) {

      $scope.navigation = [

        {
          category: "Overview",
          contents: [
            { name: "Introduction", file: "README.md" },
            { name: "About this Workflow", file: "ABOUT.md" },
            { name: "License", file: "LICENSE.md" }
          ]
        },

        <% if @options[:workflows] || @options[:libraries] %>
          <% @categories.each do |c| %>
            { category: '<%= c %>',
              contents: [
                <% if @options[:workflows] %>
                  <% @operation_type_specs.select { |ots| ots[:operation_type][:category] == c }.each do |ots| %>
                    {
                      name: '<%= ots[:operation_type][:name] %>',
                      file: '/operation_types/<%= sanitize_filename ots[:operation_type][:name] %>' + '.md'
                    },
                  <% end %>
                <% end %>
                <% if @options[:libraries] %>
                  <% @libraries.select { |lib| lib[:category] == c }.each do |lib| %>
                    {
                      name: 'Lib: <%= lib[:name] %>',
                      library: '<%= sanitize_filename lib[:name] %>'
                    },
                  <% end %>
                <% end %>
              ]
            },
          <% end %>
        <% end %>

        <% if @options[:inventory] %>
          { category: "Sample Types",
            contents: [
              <% @sample_types.each do |st| %>
                {
                  name: '<%= st[:name] %>',
                  file: '/sample_types/<%= sanitize_filename st[:name] %>'  + '.md'
                },
              <% end %>
            ]
          },
          { category: "Containers",
            contents: [
              <% @object_types.each do |ot| %>
                {
                  name: '<%= ot[:name] %>',
                  file: '/object_types/<%= sanitize_filename ot[:name] %>'  + '.md'
                },
              <% end %>
            ]
          }
        <% end %>

      ];

      $scope.load = function(section,content) {

        $scope.state.section = section;
        $scope.state.active_content = content;

        if ( content.library ) {

          let tag = "<iframe class='lib-frame' src='libraries/" + content.library + ".html' scrolling='yes'></iframe>"
          $("#aquadoc-content").empty().append(tag);

        } else {

          $http.get(content.file)
               .then(response => {
                  var md = window.markdownit().set({html: true})
                  $('#aquadoc-content').empty().html(md.render(response.data));
                  highlight_code();
                });

        }

      }

      function load_operation_type(name) {
        load_md("operation_types/" + name + '.md');
      }

      function load_sample_type(name) {
        load_md("sample_types/" + name + '.md');
      }

      function load_object_type(name) {
        load_md("object_types/" + name + '.md');
      }

      function load_library(name) {
        let tag = "<iframe class='lib-frame' src='libraries/" + name + ".html' scrolling='yes'></iframe>"
        $("#aquadoc-content").empty().append(tag);
      }

      $http.get("config.json")
           .then(response => $scope.title = response.data.title);

      $scope.link_class = function(section,content) {
        let c = "";
        if ( $scope.state.section == section &&
             $scope.state.active_content == content ) {
          c += "active-content";
        } else {
          c += "inactive-content";
        }
        return c;
      }

      $scope.state = {
        section: $scope.navigation[0],
        active_content: $scope.navigation[0].contents[0]
      };

      $scope.load($scope.navigation[0],$scope.navigation[0].contents[0]);

      $scope.navigation[0].open = true;

      console.log($scope.state)

    }]);

})();












function highlight_code() {
  $('pre').each(function(i, block) {
    hljs.highlightBlock(block);
    $(block).addClass("code-block");
  });
  $("#precondition").click(function() {
    if ( $(this).html() == "[show]" ) {
      $(this).html("[hide]");
      $($("pre")[0]).show();
    } else {
      $(this).html("[show]");
      $($("pre")[0]).hide();
    }
  });
  $("#protocol").click(function() {
    if ( $(this).html() == "[show]" ) {
      $(this).html("[hide]");
    $($("pre")[1]).show();
    } else {
      $(this).html("[show]");
      $($("pre")[1]).hide();
    }
  });
}
