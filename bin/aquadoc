#!/usr/bin/env ruby

require 'aquadoc'

opts = {}
ARGV.each do |arg|

  case arg

  when "--no-workflows"
    opts[:workflows] = false

  when "--no-libraries"
    opts[:libraries] = false

  when "--no-inventory"
    opts[:inventory] = false

  when "--no-yard"
    opts[:yard_docs] = false

  when "--help"

    puts <<~HELP
      aquadoc [options...]
        --no-inventory     Do not include inventory definitions.
        --no-libraries     Do not include library code.
        --no-workflows     Do not include workflow (operation type) code.
        --no-yard          Do not automatically generation library documentation
                           using yard.
    HELP
    exit(0)

  else

    puts "Unknown option: #{arg}"
    exit(-1)

  end

end

begin
  config = File.read("./config.json")
  config = JSON.parse(config, symbolize_names: true)
rescue Exception => e
  raise "Could not find valid config file: #{e}"
end

categories = []
Dir["categories/*.json"].each do |c|
  name = c.split("/").last;
  file = File.read(c);
  categories << JSON.parse(file, symbolize_names: true)
end

ag = Aquadoc::Git.new(config, categories, opts)

if ag.authorized
  ag.run
else
  puts "Could not authenticate with github"
end

puts "\n"
